{"version":3,"file":"static/js/867.d26fd15c.chunk.js","mappings":"sPAOe,SAASA,IAAa,IAADC,EAC1BC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAkCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxBG,EAAW,SAAWZ,EAAU,WAkBtC,OAhBAa,EAAAA,EAAAA,YAAU,WACRF,GAAa,IACbG,EAAAA,EAAAA,GAAUF,GACPG,MAAK,SAAAC,GAEJT,EAAaS,EACf,IACCC,OAAM,SAAAC,GACLC,EAAAA,OAAAA,KAAY,4BAADC,OACmBF,EAAMG,QAAO,6BAE7C,IACCC,SAAQ,WACPX,GAAa,EACf,GACJ,GAAG,CAACC,KAEFW,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGf,GACCa,EAAAA,EAAAA,KAACG,EAAAA,EAAY,KACG,QAAd3B,EAAAO,EAAUqB,YAAI,IAAA5B,OAAA,EAAdA,EAAgB6B,QAAS,GAC3BL,EAAAA,EAAAA,KAAA,MAAAE,SACGnB,EAAUqB,KAAKE,KAAI,SAAAC,GAAK,OACvBC,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CACGK,EAAME,KAAK,OAAKF,EAAMG,YADhBH,EAAMI,UAEV,OAITX,EAAAA,EAAAA,KAAA,KAAAE,SAAG,0BAIX,C,4EC7CA,GAAgB,QAAU,+B,SCIpBU,EAAYC,SAASC,cAAc,eAE1B,SAASX,IACtB,OAAOY,EAAAA,EAAAA,eACLf,EAAAA,EAAAA,KAAA,OAAKgB,UAAWC,EAAAA,QAAYf,UAC1BF,EAAAA,EAAAA,KAACkB,EAAAA,GAAY,CACXC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,yBACVC,iBAAiB,GACjBC,iBAAiB,GACjBC,kBAAkB,OAGtBhB,EAEJ,C,8FCXMiB,EAAU,CACdC,QAHe,gCAIfC,OAAQ,CACNC,QANY,qCAUD,SAAezC,IAAS,OAAA0C,EAAAC,MAAC,KAADC,UAAA,CAQtC,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MARc,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAjD,EAAAkD,EAAAR,UAAA,OAAAE,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACsC,OADbP,EAAQG,EAAAtC,OAAA,QAAA2C,IAAAL,EAAA,GAAAA,EAAA,GAAG,GAAIF,EAAOE,EAAAtC,OAAA,QAAA2C,IAAAL,EAAA,GAAAA,EAAA,GAAG,CAAC,EAChEd,EAAQE,QAAMkB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQpB,EAAQE,QAAWU,GAAUI,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE1BG,EAAAA,EAAAA,IAAUV,EAAUX,GAAS,KAAD,EAAvC,OAAuCa,EAAAG,EAAAM,KAA3C1D,EAAIiD,EAAJjD,KAAIoD,EAAAO,OAAA,SACL3D,GAAI,cAAAoD,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAQ,GAAC,KAAD,oBAAAR,EAAAS,OAAA,GAAAf,EAAA,mBAIdN,EAAAC,MAAA,KAAAC,UAAA,C","sources":["components/MovieCast/MovieCast.jsx","webpack://react-homework-template/./src/components/SplashScreen/SplashScreen.module.css?f0e9","components/SplashScreen/SplashScreen.jsx","controllers/api-controller.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport getMovies from 'controllers/api-controller';\nimport SplashScreen from 'components/SplashScreen';\n\nexport default function MovieCast() {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const ENDPOINT = 'movie/' + movieId + '/credits';\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovies(ENDPOINT)\n      .then(data => {\n        // console.log(data);\n        setMovieCast(data);\n      })\n      .catch(error => {\n        Notify.info(\n          `Remote data unavailable. ${error.message}. Please try again later.`\n        );\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [ENDPOINT]);\n  return (\n    <>\n      {isLoading ? (\n        <SplashScreen />\n      ) : movieCast.cast?.length > 0 ? (\n        <ul>\n          {movieCast.cast.map(actor => (\n            <li key={actor.credit_id}>\n              {actor.name} as {actor.character}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No data about actors</p>\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"SplashScreen_Overlay__griNT\"};","import { ThreeCircles } from 'react-loader-spinner';\nimport { createPortal } from 'react-dom';\n\nimport css from './SplashScreen.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function SplashScreen () {\n  return createPortal(\n    <div className={css.Overlay}>\n      <ThreeCircles\n        height=\"160\"\n        width=\"160\"\n        color=\"#ffffff\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"\"\n        innerCircleColor=\"\"\n        middleCircleColor=\"\"\n      />\n    </div>,\n    modalRoot\n  );\n};\n\n","// API key\n// b0574b4adcec6022cde1a05e31ff0812\n\n// Token\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMDU3NGI0YWRjZWM2MDIyY2RlMWEwNWUzMWZmMDgxMiIsInN1YiI6IjY0Nzg1ODk3MGUyOWEyMDBhNjVlZTliYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.LqRhvpUfAdXkzh0QdqReCBwm8cN_jLQcyKFyo2kwbME\n\n// Docs\n// https://developer.themoviedb.org/docs\n\nimport axios from 'axios';\n\nconst API_KEY = 'b0574b4adcec6022cde1a05e31ff0812';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst request = {\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n};\n\nexport default async function getMovies(endpoint = '', options = {}) {\n  request.params = { ...request.params, ...options };\n  try {\n    const { data } = await axios.get(endpoint, request);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["MovieCast","_movieCast$cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","_useState3","_useState4","isLoading","setIsLoading","ENDPOINT","useEffect","getMovies","then","data","catch","error","Notify","concat","message","finally","_jsx","_Fragment","children","SplashScreen","cast","length","map","actor","_jsxs","name","character","credit_id","modalRoot","document","querySelector","createPortal","className","css","ThreeCircles","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","request","baseURL","params","api_key","_getMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","endpoint","options","_yield$axios$get","_args","wrap","_context","prev","next","undefined","_objectSpread","axios","sent","abrupt","t0","stop"],"sourceRoot":""}