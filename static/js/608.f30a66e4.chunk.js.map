{"version":3,"file":"static/js/608.f30a66e4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/PaginationControls/PaginationControls.module.css?2c65","components/PaginationControls/PaginationControls.jsx","webpack://react-homework-template/./src/components/SplashScreen/SplashScreen.module.css?f0e9","components/SplashScreen/SplashScreen.jsx","controllers/api-controller.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Pagination\":\"PaginationControls_Pagination__88bya\",\"counter\":\"PaginationControls_counter__ksDJN\"};","import css from './PaginationControls.module.css'\n\nexport default function PaginationControls({ current, total, onClick }) {\n  const atStart = current === 1;\n  const atEnd = current === total;\n\n\n  return (\n    <div className={css.Pagination}>\n      <button type=\"button\" onClick={() => onClick(1)} disabled={atStart}>\n        &lt;&lt; First Page\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => onClick(current - 1)}\n        disabled={atStart}\n      >\n        &lt; Prev page\n      </button>\n      <div className={css.counter}>\n        Page {current} of {total}\n      </div>\n      <button\n        type=\"button\"\n        onClick={() => onClick(current + 1)}\n        disabled={atEnd}\n      >\n        Next page &gt;\n      </button>\n      <button type=\"button\" onClick={() => onClick(total)} disabled={atEnd}>\n        Last Page &gt;&gt;\n      </button>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"SplashScreen_Overlay__griNT\"};","import { ThreeCircles } from 'react-loader-spinner';\nimport { createPortal } from 'react-dom';\n\nimport css from './SplashScreen.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function SplashScreen () {\n  return createPortal(\n    <div className={css.Overlay}>\n      <ThreeCircles\n        height=\"160\"\n        width=\"160\"\n        color=\"#ffffff\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"\"\n        innerCircleColor=\"\"\n        middleCircleColor=\"\"\n      />\n    </div>,\n    modalRoot\n  );\n};\n\n","// API key\n// b0574b4adcec6022cde1a05e31ff0812\n\n// Token\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMDU3NGI0YWRjZWM2MDIyY2RlMWEwNWUzMWZmMDgxMiIsInN1YiI6IjY0Nzg1ODk3MGUyOWEyMDBhNjVlZTliYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.LqRhvpUfAdXkzh0QdqReCBwm8cN_jLQcyKFyo2kwbME\n\n// Docs\n// https://developer.themoviedb.org/docs\n\nimport axios from 'axios';\n\nconst API_KEY = 'b0574b4adcec6022cde1a05e31ff0812';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst request = {\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n};\n\nexport default async function getMovies(endpoint = '', options = {}) {\n  request.params = { ...request.params, ...options };\n  try {\n    const { data } = await axios.get(endpoint, request);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Movies\":\"Movies_Movies__cFej6\",\"MoviesForm\":\"Movies_MoviesForm__jenk-\"};","import { useEffect, useReducer, useRef, useMemo } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport getMovies from 'controllers/api-controller';\nimport PaginationControls from 'components/PaginationControls';\nimport SplashScreen from 'components/SplashScreen';\nimport css from './Movies.module.css'\n\nconst INITIAL_STATE = {\n  data: [],\n  total_pages: 1,\n  isLoading: false,\n  // query: '',\n  // error: false,\n};\n\nconst MAX_PAGES = 1000;\nconst PAGINATION_RELATED_ERROR = 22;\n\nexport default function Home() {\n  const skipFetch = useRef(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\n  const location = useLocation();\n  const ENDPOINT = 'search/movie';\n\n  const currentPage = useMemo(() => {\n    if (searchParams.get('page') === null) {\n      return 1;\n    }\n    const page = Number(searchParams.get('page'));\n    if (isNaN(page) || page < 1 || page > MAX_PAGES) {\n      skipFetch.current = true;\n      return 1;\n    }\n    return page;\n  }, [searchParams]);\n\n  const currentQuery = useMemo(() => {\n    const query = searchParams.get('query');\n    if (query === null || query === '') {\n      skipFetch.current = true;\n      return '';\n    }\n    return query;\n  }, [searchParams]);\n\n  const handlePagination = page => {\n    setSearchParams({ query: currentQuery, page });\n  };\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case 'data/total':\n        return {\n          ...state,\n          total_pages: action.payload,\n        };\n      case 'data/set':\n        return {\n          ...state,\n          total_pages: action.payload.total_pages,\n          data: action.payload.results,\n        };\n      // case 'page/reset':\n      //   setSearchParams({});\n      //   return state;\n      // case 'error/set':\n      //   return { ...state, error: action.payload };\n      case 'status/loading':\n        return {\n          ...state,\n          isLoading: action.payload,\n        };\n\n      default:\n        return state;\n    }\n  }\n\n  useEffect(() => {\n    if (skipFetch.current) {\n      skipFetch.current = false;\n      setSearchParams({ });\n      // setSearchParams({ query: currentQuery });\n\n      return;\n    }\n\n    dispatch({ type: 'status/loading', payload: true });\n    // dispatch({ type: 'error/set', payload: false });\n    getMovies(ENDPOINT, { query: currentQuery, page: currentPage })\n      .then(({ results, total_pages }) => {\n        if (currentPage > total_pages) {\n          setSearchParams({ query: currentQuery });\n        } else {\n          dispatch({ type: 'data/set', payload: { results, total_pages } });\n        }\n      })\n      .catch(error => {\n        if (error.response.data.status_code === PAGINATION_RELATED_ERROR) {\n          setSearchParams({ query: currentQuery });\n        }\n        // dispatch({ type: 'error/set', payload: true });\n        Notify.info(`${error.response.data.status_message}`);\n      })\n      .finally(() => {\n        dispatch({ type: 'status/loading', payload: false });\n      });\n  }, [currentPage, currentQuery, setSearchParams]);\n\n  const handleSubmit = e => {\n    const query = e.target.elements.query.value;\n    e.preventDefault();\n    if (isQueryValid(query)) {\n      setSearchParams({ query });\n      return;\n    }\n    Notify.failure('Enter valid query');\n  };\n\n  const isQueryValid = query => {\n    return query.trim() !== '' ? true : false;\n  };\n\n  return (\n    <>\n      {state.total_pages > 1 && (\n        <PaginationControls\n          current={currentPage}\n          total={state.total_pages}\n          onClick={handlePagination}\n        />\n      )}\n      <form onSubmit={handleSubmit} className={css.MoviesForm}>\n        <label>\n          Enter movie name{' '}\n          <input\n            type=\"text\"\n            name=\"query\"\n            defaultValue={currentQuery}\n            // onChange={handleChangeQuery}\n          />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {state.isLoading ? (\n        <SplashScreen />\n      ) : state.data.length > 0 ? (\n        <ul className={css.Movies}>\n          {state.data.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                <img\n                  src={\n                    'https://image.tmdb.org/t/p/w220_and_h330_face' +\n                    movie.poster_path\n                  }\n                  alt={movie.title}\n                />\n                <h2>{movie.title}</h2>{' '}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No movies to display</p>\n      )}\n    </>\n  );\n}\n"],"names":["PaginationControls","_ref","current","total","onClick","atStart","atEnd","_jsxs","className","css","children","_jsx","type","disabled","modalRoot","document","querySelector","SplashScreen","createPortal","ThreeCircles","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","request","baseURL","params","api_key","getMovies","_getMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","endpoint","options","_yield$axios$get","data","_args","wrap","_context","prev","next","length","undefined","_objectSpread","axios","sent","abrupt","t0","stop","INITIAL_STATE","total_pages","isLoading","MAX_PAGES","PAGINATION_RELATED_ERROR","Home","skipFetch","useRef","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useReducer","useReducer","state","action","payload","results","_useReducer2","dispatch","location","useLocation","currentPage","useMemo","get","page","Number","isNaN","currentQuery","query","useEffect","then","catch","error","response","status_code","Notify","concat","status_message","finally","isQueryValid","trim","_Fragment","onSubmit","e","target","elements","value","preventDefault","name","defaultValue","map","movie","Link","to","id","from","src","poster_path","alt","title"],"sourceRoot":""}